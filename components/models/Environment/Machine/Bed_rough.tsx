/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 ./public/models/glb/radiation/Bed_rough.glb -t
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF, useMatcapTexture } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
    nodes: {
        Base: THREE.SkinnedMesh;
        Bed: THREE.SkinnedMesh;
        Root: THREE.Bone;
    };
    materials: {};
};

import { applyBasePath } from "../../../../utils";
const modelURL = applyBasePath(
    `/models/glb/environments/machine/Bed_rough.glb`
);

export function BedRough(props: JSX.IntrinsicElements["group"]) {
    const { nodes, materials } = useGLTF(modelURL) as GLTFResult;

    const [BaseMatcap] = useMatcapTexture("28292A_D3DAE5_A3ACB8_818183", 512);
    const [BedMatcap] = useMatcapTexture("2A2A2A_DBDBDB_6A6A6A_949494", 512);

    return (
        <group {...props} dispose={null}>
            <primitive object={nodes.Root} />
            <skinnedMesh
                name="Base"
                geometry={nodes.Base.geometry}
                material={nodes.Base.material}
                skeleton={nodes.Base.skeleton}
            >
                <meshMatcapMaterial attach="material" matcap={BaseMatcap} />
            </skinnedMesh>
            <skinnedMesh
                name="Bed"
                geometry={nodes.Bed.geometry}
                material={nodes.Bed.material}
                skeleton={nodes.Bed.skeleton}
            >
                <meshMatcapMaterial attach="material" matcap={BedMatcap} />
            </skinnedMesh>
        </group>
    );
}

useGLTF.preload(modelURL);
