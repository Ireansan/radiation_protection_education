/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF, useMatcapTexture, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";

import { useStore } from "../../store";

type GLTFResult = GLTF & {
    nodes: {
        Alpha_Joints: THREE.SkinnedMesh;
        Alpha_Surface: THREE.SkinnedMesh;
        mixamorigHips: THREE.Bone;
    };
    materials: {
        Alpha_Joints_MAT: THREE.MeshStandardMaterial;
        Alpha_Body_MAT: THREE.MeshStandardMaterial;
    };
};

type ActionName = "T-Pose";
type GLTFActions = Record<ActionName, THREE.AnimationAction>;

import { applyBasePath } from "../../utils";
const modelURL = applyBasePath(`/models/glb/Y-Bot.glb`);

export function YBot(props: JSX.IntrinsicElements["group"]) {
    const group = useRef<THREE.Group>(null!);
    const { nodes, materials, animations } = useGLTF(
        modelURL
    ) as unknown as GLTFResult;
    // const { actions } = useAnimations<GLTFActions>(animations, group);

    // Matcap
    const [debug, playerConfig] = useStore((state) => [
        state.debug,
        state.playerConfig,
    ]);
    const { bodyMatcap, jointMatcap } = playerConfig;
    const [BodyMatcap] = useMatcapTexture(bodyMatcap, 512);
    const [JointMatcap] = useMatcapTexture(jointMatcap, 512);

    return (
        <>
            <group ref={group} {...props} dispose={null}>
                <group name="Scene">
                    <group
                        name="Y-Bot"
                        rotation={[Math.PI / 2, 0, 0]}
                        scale={0.01}
                    >
                        <primitive object={nodes.mixamorigHips} />
                        <skinnedMesh
                            name="Alpha_Joints"
                            geometry={nodes.Alpha_Joints.geometry}
                            material={materials.Alpha_Joints_MAT}
                            skeleton={nodes.Alpha_Joints.skeleton}
                        >
                            <meshMatcapMaterial
                                attach="material"
                                matcap={JointMatcap}
                            />
                        </skinnedMesh>
                        <skinnedMesh
                            name="Alpha_Surface"
                            geometry={nodes.Alpha_Surface.geometry}
                            material={materials.Alpha_Body_MAT}
                            skeleton={nodes.Alpha_Surface.skeleton}
                        >
                            <meshMatcapMaterial
                                attach="material"
                                matcap={BodyMatcap}
                            />
                        </skinnedMesh>
                    </group>
                </group>
            </group>
            {/* FIXME: skeletonHelper */}
            <group>
                <skeletonHelper args={[nodes.mixamorigHips]} visible={debug} />
            </group>
        </>
    );
}

useGLTF.preload(modelURL);
